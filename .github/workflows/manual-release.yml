name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release'
        required: true

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact: papyrus_windows.zip
          - os: ubuntu-latest
            artifact: papyrus_linux.zip
          - os: macos-latest
            artifact: papyrus_macos.zip

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
  
      - name: Install V
        uses: vlang/setup-v@v1
        with:
          check-latest: true
     
      - name: Build Project
        run: v -prod -gc none -o "bin/papyrus" compiler.v
      
      - name: Get the date
        id: date
        run: echo "::set-output name=today::$(date +'%Y%m%d')"
      
      - name: Rename bin directory
        run: |
          mv bin papyrus_${{ steps.date.outputs.today }}
      
      - name: Create ZIP archive
        shell: bash
        run: |
          if [[ $RUNNER_OS == 'Windows' ]]; then
            7z a -tzip ${{ matrix.artifact }} papyrus_${{ steps.date.outputs.today }}/
          else
            zip -r9 --symlinks ${{ matrix.artifact }} papyrus_${{ steps.date.outputs.today }}/
          fi
          zipinfo ${{ matrix.artifact }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}_${{ steps.date.outputs.today }}
          release_name: Release ${{ github.event.inputs.version }} (${{ steps.date.outputs.today }})
          body: 'Release of version ${{ github.event.inputs.version }}'
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact }}
          asset_name: ${{ matrix.artifact }}
          asset_content_type: application/zip
